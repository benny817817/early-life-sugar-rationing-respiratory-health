####Date of birth
data$year_birth=data$p34
data$month_birth=data$p52.x

library(dplyr)

#
data$birth_group <- NA  #

data$birth_group <- ifelse(
  (data$year_birth == 1951 & data$month_birth %in% c("October", "November", "December")) | 
    (data$year_birth == 1952 & data$month_birth %in% c("January", "February", "March")),
  1,
  data$birth_group
)

data$birth_group <- ifelse(
  (data$year_birth == 1952 & data$month_birth %in% c("April", "May", "June", "July", "August", "September")),
  2,
  data$birth_group
)

data$birth_group <- ifelse(
  (data$year_birth == 1952 & data$month_birth %in% c("October", "November", "December")),
  3,
  data$birth_group
)

data$birth_group <- ifelse(
  (data$year_birth == 1953 & data$month_birth %in% c("January", "February", "March")),
  3,
  data$birth_group
)

data$birth_group <- ifelse(
  (data$year_birth == 1953 & data$month_birth %in% c("April", "May", "June", "July", "August", "September")),
  4,
  data$birth_group
)

data$birth_group <- ifelse(
  (data$year_birth == 1953 & data$month_birth %in% c("October", "November", "December")),
  5,
  data$birth_group
)

data$birth_group <- ifelse(
  (data$year_birth == 1954 & data$month_birth %in% c("January", "February", "March", "April", "May", "June")),
  5,
  data$birth_group
)

data$birth_group <- ifelse(
  (data$year_birth == 1954 & data$month_birth %in% c("July", "August", "September", "October", "November", "December")),
  6,
  data$birth_group
)

data$birth_group <- ifelse(
  (data$year_birth == 1955 & data$month_birth %in% c("January", "February", "March", "April", "May", "June")),
  7,
  data$birth_group
)

data$birth_group <- ifelse(
  (data$year_birth == 1955 & data$month_birth %in% c("July", "August", "September", "October", "November", "December")),
  8,
  data$birth_group
)

data$birth_group <- ifelse(
  (data$year_birth == 1956 & data$month_birth %in% c("January", "February", "March")),
  9,
  data$birth_group
)

table(data$birth_group)

#Number of participants
table(data$birth_group)
data$birth_group_all <- ifelse(data$birth_group %in% 1:5, 2, 
                             ifelse(data$birth_group %in% 6:9, 1, NA))
table(data$birth_group_all)

result <- data %>%
  group_by(year_birth, month_birth) %>%
  summarise(N = n()) %>%
  arrange(year_birth, match(month_birth, c("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"))) %>%
  ungroup() %>%
  mutate(total_count = nrow(data)) %>%
  mutate(percent = N / total_count * 100) %>%
  mutate(cumulative_rate = cumsum(N) / total_count * 100)

print(result)

#Age 
data$age=data$p21003_i0.x
summary(data$age)
# 
cat("Overall: Mean =", round(mean(data$age, na.rm = TRUE), 1), 
    ", SD =", round(sd(data$age, na.rm = TRUE), 1), "\n")

# 
cat("Group 1: Mean =", round(mean(data$age[data$birth_group_all == 1], na.rm = TRUE), 1), 
    ", SD =", round(sd(data$age[data$birth_group_all == 1], na.rm = TRUE), 1), "\n")

cat("Group 2: Mean =", round(mean(data$age[data$birth_group_all == 2], na.rm = TRUE), 1), 
    ", SD =", round(sd(data$age[data$birth_group_all == 2], na.rm = TRUE), 1), "\n")


p_value <- round(t.test(data$age[data$birth_group_all == 1], data$age[data$birth_group_all == 2])$p.value, 4)
cat("P-value:", p_value, "\n")

#Sex
data$sex=data$p31.x
table(data$sex)

# 
CrossTable(data$sex,data$birth_group_all)

#
p_value <- round(chisq.test(table(data$sex, data$birth_group_all))$p.value, 4)
cat("P-value:", p_value, "\n")

#Place of birth
table(data$p1647_i0)
data$birth_place <- ifelse(data$p1647_i0 %in% c("England", "Northern Ireland", "Republic of Ireland"), "England", 
                           ifelse(data$p1647_i0 == "Scotland", "Scotland", 
                                  ifelse(data$p1647_i0 == "Wales", "Wales", NA)))
table(data$birth_place)
# 
CrossTable(data$birth_place,data$birth_group_all)

# 
p_value <- round(chisq.test(table(data$birth_place, data$birth_group_all))$p.value, 4)
cat("P-value:", p_value, "\n")

#birth month
data$month_birth=data$p52.x
table(data$month_birth)
#
data$month_birth_1 <- ifelse(data$month_birth %in% c("March", "April", "May"), 'Mar 1-May 31',
                             ifelse(data$month_birth %in% c("June", "July", "August"), 'Jun 1-Aug 31',
                                    ifelse(data$month_birth %in% c("September", "October", "November"), 'Sep 1-Nov 30',
                                           ifelse(data$month_birth %in% c("December", "January", "February"), 'Dec 1-Feb 28', NA))))
table(data$month_birth_1)
CrossTable(data$month_birth_1,data$birth_group_all)
# 
p_value <- round(chisq.test(table(data$month_birth_1, data$birth_group_all))$p.value, 4)
cat("P-value:", p_value, "\n")

#ethnicity
table(data$p21000_i0)
data$ethnic <- ifelse(grepl("white|British", data$p21000_i0, ignore.case = TRUE), 'White', 'Non-white')
table(data$ethnic)
CrossTable(data$ethnic,data$birth_group_all)
# 
p_value <- round(chisq.test(table(data$ethnic, data$birth_group_all))$p.value, 4)
cat("P-value:", p_value, "\n")

#education
data$education=data$p6138_i0
table(data$education)
data$education <- ifelse(grepl("A levels", data$p6138_i0, ignore.case = TRUE), "A levels",
                         ifelse(grepl("professional", data$p6138_i0, ignore.case = TRUE), "Professional/other",
                                ifelse(grepl("College", data$p6138_i0, ignore.case = TRUE), "College/university", 
                                       "Below A levels")))
table(data$education)
CrossTable(data$education,data$birth_group_all)
#
p_value <- round(chisq.test(table(data$education, data$birth_group_all))$p.value, 4)
cat("P-value:", p_value, "\n")


#Household
data$household=data$p738_i0
data$household[data$p738_i0=='Less than 18,000']='<18,000'
data$household[data$p738_i0=='18,000 to 30,999']= '18,000-30,999'
data$household[data$p738_i0=='31,000 to 51,999']= '31,000-51,999'
data$household[data$p738_i0=='52,000 to 100,000']= '52,000-100,000'
data$household[data$p738_i0=='Greater than 100,000']= '>100,000'
data$household[data$household=='']= '>100,000'
table(data$household)
CrossTable(data$household,data$birth_group_all)
#
p_value <- round(chisq.test(table(data$household, data$birth_group_all))$p.value, 4)
cat("P-value:", p_value, "\n")

#Townsend deprivation index
data$TDI=data$p22189
summary(data$TDI)

#
cat("Overall: Mean =", round(mean(data$TDI, na.rm = TRUE), 1), 
    ", SD =", round(sd(data$TDI, na.rm = TRUE), 1), "\n")

# 
cat("Group 1: Mean =", round(mean(data$TDI[data$birth_group_all == 1], na.rm = TRUE), 1), 
    ", SD =", round(sd(data$TDI[data$birth_group_all == 1], na.rm = TRUE), 1), "\n")

cat("Group 2: Mean =", round(mean(data$TDI[data$birth_group_all == 2], na.rm = TRUE), 1), 
    ", SD =", round(sd(data$TDI[data$birth_group_all == 2], na.rm = TRUE), 1), "\n")

p_value <- round(t.test(data$TDI[data$birth_group_all == 1], data$TDI[data$birth_group_all == 2])$p.value, 4)
cat("P-value:", p_value, "\n")

#Smoking status
table(data$p20116_i0)
data$smoke=data$p20116_i0
table(data$smoke)
CrossTable(data$smoke,data$birth_group_all)
p_value <- round(chisq.test(table(data$smoke, data$birth_group_all))$p.value, 4)
cat("P-value:", p_value, "\n")

#Alcohol
table(data$p1558_i0.x)


#BMI
data$BMI=data$p21001_i0
summary(data$BMI)

cat("Overall: Mean =", round(mean(data$BMI, na.rm = TRUE), 1), 
    ", SD =", round(sd(data$BMI, na.rm = TRUE), 1), "\n")

cat("Group 1: Mean =", round(mean(data$BMI[data$birth_group_all == 1], na.rm = TRUE), 1), 
    ", SD =", round(sd(data$BMI[data$birth_group_all == 1], na.rm = TRUE), 1), "\n")

cat("Group 2: Mean =", round(mean(data$BMI[data$birth_group_all == 2], na.rm = TRUE), 1), 
    ", SD =", round(sd(data$BMI[data$birth_group_all == 2], na.rm = TRUE), 1), "\n")

p_value <- round(t.test(data$BMI[data$birth_group_all == 1], data$BMI[data$birth_group_all == 2])$p.value, 4)
cat("P-value:", p_value, "\n")

#	Summed MET minutes per week for all activity
data$MET_week=data$p22040_i0
summary(data$MET_week)
summary(data$MET_week)

cat("Overall: Median =", round(median(data$MET_week, na.rm = TRUE), 1), 
    ", IQR = [", round(quantile(data$MET_week, 0.25, na.rm = TRUE), 1), ", ", 
    round(quantile(data$MET_week, 0.75, na.rm = TRUE), 1), "]\n")

cat("Group 1: Median =", round(median(data$MET_week[data$birth_group_all == 1], na.rm = TRUE), 1), 
    ", IQR = [", round(quantile(data$MET_week[data$birth_group_all == 1], 0.25, na.rm = TRUE), 1), ", ", 
    round(quantile(data$MET_week[data$birth_group_all == 1], 0.75, na.rm = TRUE), 1), "]\n")

cat("Group 2: Median =", round(median(data$MET_week[data$birth_group_all == 2], na.rm = TRUE), 1), 
    ", IQR = [", round(quantile(data$MET_week[data$birth_group_all == 2], 0.25, na.rm = TRUE), 1), ", ", 
    round(quantile(data$MET_week[data$birth_group_all == 2], 0.75, na.rm = TRUE), 1), "]\n")

p_value <- round(wilcox.test(data$MET_week[data$birth_group_all == 1], 
                             data$MET_week[data$birth_group_all == 2])$p.value, 4)
cat("P-value:", p_value, "\n")
library(flexsurv)
library(survival)
fit_and_extract_AIC_BIC <- function(time_var, event_var, dist) {
  model <- survreg(Surv(time_var, event_var) ~ 1, data = data, dist = dist)
  aic <- AIC(model)
  bic <- BIC(model)
  return(c(AIC = aic, BIC = bic))
}
variables <- list(
  "incident_IPF" = "incident_IPF_time",
  "incident_COPD" = "incident_COPD_time",
  "incident_asthma" = "incident_asthma_time"
)
result <- data.frame(
  Model = c("Weibull", "Logistic", "Log normal", "Exponential"),
  `incident_IPF_AIC` = NA,
  `incident_COPD_AIC` = NA,
  `incident_asthma_AIC` = NA,
  `incident_IPF_BIC` = NA,
  `incident_COPD_BIC` = NA,
  `incident_asthma_BIC` = NA
)
for (var in names(variables)) {
  time_var <- data[[variables[[var]]]]
  event_var <- data[[var]]
  # 对每个分布进行拟合并提取结果
  result[1, paste(var, "_AIC", sep = "")] <- fit_and_extract_AIC_BIC(time_var, event_var, dist = "weibull")[1]  # Weibull
  result[2, paste(var, "_AIC", sep = "")] <- fit_and_extract_AIC_BIC(time_var, event_var, dist = "logistic")[1]  # Logistic
  result[3, paste(var, "_AIC", sep = "")] <- fit_and_extract_AIC_BIC(time_var, event_var, dist = "lognormal")[1]  # Log normal
  result[4, paste(var, "_AIC", sep = "")] <- fit_and_extract_AIC_BIC(time_var, event_var, dist = "exponential")[1]  # Exponential
  result[1, paste(var, "_BIC", sep = "")] <- fit_and_extract_AIC_BIC(time_var, event_var, dist = "weibull")[2]  # Weibull
  result[2, paste(var, "_BIC", sep = "")] <- fit_and_extract_AIC_BIC(time_var, event_var, dist = "logistic")[2]  # Logistic
  result[3, paste(var, "_BIC", sep = "")] <- fit_and_extract_AIC_BIC(time_var, event_var, dist = "lognormal")[2]  # Log normal
  result[4, paste(var, "_BIC", sep = "")] <- fit_and_extract_AIC_BIC(time_var, event_var, dist = "exponential")[2]  # Exponential
}

#IPF ICD
data$incident_IPF=NA

IPF=function(x){
  for (i in 1:nrow(data)) {
    if (is.na(data$incident_IPF[i])&grepl("J84|J82|J80",data[[x]][i])) {
      data$incident_IPF[i]=1
      print(i)
    }
  }
  return(data$incident_IPF)
}

for (p in ls(data,pattern="41270")) {
  data$incident_IPF=IPF(p)
}   

data$incident_IPF[is.na(data$incident_IPF)]=0
table(data$incident_IPF)


#IPF time
data$incident_IPF_time = NA
yuyu=function(y){
  y=gsub("41270_","41280_a",y)
  return(y)
}
IPF=function(x){
  for (i in which(data$incident_IPF==1)) {
    if (is.na(data$incident_IPF_time[i])&grepl("J84|J82|J80",data[[x]][i])){
      data$incident_IPF_time[i]=data[[yuyu(x)]][i]
    }
  }
  return(data$incident_IPF_time)
}

for (n in ls(data,pattern="41270_")) {
  data$incident_IPF_time=IPF(n)
}   

data$incident_IPF_time=ymd(data$incident_IPF_time)-ymd(data$p53_i0)
data$incident_IPF_time=as.numeric(data$incident_IPF_time)
summary(data$incident_IPF_time)
table(data$incident_IPF_time<0)
# 找出data$incident_IPF_time

data$survival_time=ymd(data$p40000_i0)-ymd(data$p53_i0)
data$survival_time=as.numeric(data$survival_time)
summary(data$survival_time)
data$incident_IPF_time <- ifelse(is.na(data$incident_IPF_time), 
                                ifelse(is.na(data$survival_time), 
                                       as.numeric(ymd('2023-03-25') - ymd(data$p53_i0)), 
                                       data$survival_time), 
                                data$incident_IPF_time)
summary(data$incident_IPF_time/365)


data$birth_group=as.factor(data$birth_group)


############################################incident COPD
#COPD
data$incident_COPD=NA
MI=function(x){
  for (i in 1:nrow(data)) {
    if (is.na(data$incident_COPD[i])&grepl('J44',data[[x]][i])) {
      data$incident_COPD[i]=1
      print(i)
    }
  }
  return(data$incident_COPD)
}

for (p in ls(data,pattern="41270")) {
  data$incident_COPD=MI(p)
}   

data$incident_COPD[is.na(data$incident_COPD)]=0
table(data$incident_COPD)


#COPD time
data$incident_COPD_time = NA
yuyu=function(y){
  y=gsub("41270_","41280_a",y)
  return(y)
}
MI=function(x){
  for (i in which(data$incident_COPD==1)) {
    if (is.na(data$incident_COPD_time[i])&grepl('J44',data[[x]][i])){
      data$incident_COPD_time[i]=data[[yuyu(x)]][i]
    }
  }
  return(data$incident_COPD_time)
}

for (n in ls(data,pattern="41270_")) {
  data$incident_COPD_time=MI(n)
}   


data$survival_time=ymd(data$p40000_i0)-ymd(data$p53_i0)
data$survival_time=as.numeric(data$survival_time)
summary(data$survival_time)
data$incident_COPD_time <- ifelse(is.na(data$incident_COPD_time), 
                                ifelse(is.na(data$survival_time), 
                                       as.numeric(ymd('2023-03-25') - ymd(data$p53_i0)), 
                                       data$survival_time), 
                                data$incident_COPD_time)
summary(data$incident_COPD_time)


############################################asthma
#asthma
data$incident_asthma=NA
MI=function(x){
  for (i in 1:nrow(data)) {
    if (is.na(data$incident_asthma[i])&grepl('J45.0|J45.1|J45.8|J45.9',data[[x]][i])) {
      data$incident_asthma[i]=1
      print(i)
    }
  }
  return(data$incident_asthma)
}

for (p in ls(data,pattern="41270")) {
  data$incident_asthma=MI(p)
}   


#asthma time
data$incident_asthma_time = NA
yuyu=function(y){
  y=gsub("41270_","41280_a",y)
  return(y)
}
MI=function(x){
  for (i in which(data$incident_asthma==1)) {
    if (is.na(data$incident_asthma_time[i])&grepl('J45.0|J45.1|J45.8|J45.9',data[[x]][i])){
      data$incident_asthma_time[i]=data[[yuyu(x)]][i]
    }
  }
  return(data$incident_asthma_time)
}

for (n in ls(data,pattern="41270_")) {
  data$incident_asthma_time=MI(n)
}   

data$survival_time=ymd(data$p40000_i0)-ymd(data$p53_i0)
data$survival_time=as.numeric(data$survival_time)
summary(data$survival_time)
data$incident_asthma_time <- ifelse(is.na(data$incident_asthma_time), 
                                          ifelse(is.na(data$survival_time), 
                                                 as.numeric(ymd('2023-03-25') - ymd(data$p53_i0)), 
                                                 data$survival_time), 
                                          data$incident_asthma_time)
summary(data$incident_asthma_time)

varlist=(age, sex, race, birth_location, birth_month, income, townsend_index,
real_food_price, parental_lung_disease, parents_alive, maternal_smoking, breastfed,
fat_intake_birth_period, smoking_status, alcohol_intake, physical_activity, cvd, hypertension,
diabetes, digestive_disease, kidney_disease, liver_disease, survey_year)
model <- flexsurvreg(
  Surv(time, event) ~ ration_group +varlist ,
  data = df,
  dist = "gompertz"
)
summary(model)
library(lavaan)

# SEM
model <- '
  # A: sugar rationing -> mediators
  diabetes ~ a1 * ration_group + age + sex + income + parental_lung_disease
  hypertension ~ a2 * ration_group + age + sex + income + parental_lung_disease
  birthweight ~ a3 * ration_group + age + sex + income + parental_lung_disease

  # B: mediators -> outcome
  lung_disease ~ b1 * diabetes + b2 * hypertension + b3 * birthweight + c_prime * ration_group + age + sex + income + parental_lung_disease

  # 
  ind_diabetes := a1 * b1
  ind_hypertension := a2 * b2
  ind_birthweight := a3 * b3
  total_indirect := ind_diabetes + ind_hypertension + ind_birthweight
  total_effect := c_prime + total_indirect
'

# SEM
fit <- sem(model, data = df, se = "bootstrap", bootstrap = 1000)  # bootstrap可获得置信区间
# 
summary(fit, fit.measures = TRUE, standardized = TRUE, rsquare = TRUE)
# 
parameterEstimates(fit, standardized = TRUE)
#####################################
data$birth_group_1=NA
data$birth_group_1[data$birth_group==1|data$birth_group==2]=4
data$birth_group_1[data$birth_group==3|data$birth_group==4]=3
data$birth_group_1[data$birth_group==5]=2
data$birth_group_1[data$birth_group==6|data$birth_group==7|data$birth_group==8|data$birth_group==9]=1
table(data$birth_group_1)
data$birth_group_1=as.factor(data$birth_group_1)

# data$age 
# data$birth_group_1 (出生组，1, 2, 3 或 4)
reference_group <- 1  # 参考组
comparison_groups <- c(2, 3, 4)  # 要和参考组比较的其他组

event_time_map <- list(
  incident_COPD = "incident_COPD_time",
  incident_asthma = "incident_asthma_time",
  incident_IPF = "incident_IPF_time"
)

results <- list()

for (event_var in names(event_time_map)) {
  
  time_var <- event_time_map[[event_var]]
  
  event_data <- data[data[[event_var]] == 1, ]
  
  event_data$age_at_onset <- event_data$age + event_data[[time_var]] / 365
  
  event_results <- list()
  
  for (comp_group in comparison_groups) {
    reference_data <- event_data[event_data$birth_group_1 == reference_group, ]
    comparison_data <- event_data[event_data$birth_group_1 == comp_group, ]
    
    mean_reference <- mean(reference_data$age_at_onset)
    mean_comparison <- mean(comparison_data$age_at_onset)
    
    se_reference <- sd(reference_data$age_at_onset) / sqrt(nrow(reference_data))
    se_comparison <- sd(comparison_data$age_at_onset) / sqrt(nrow(comparison_data))
    
    t_test_reference <- t.test(reference_data$age_at_onset)
    t_test_comparison <- t.test(comparison_data$age_at_onset)
    
    reference_ci_lower <- round(t_test_reference$conf.int[1], 2)
    reference_ci_upper <- round(t_test_reference$conf.int[2], 2)
    comparison_ci_lower <- round(t_test_comparison$conf.int[1], 2)
    comparison_ci_upper <- round(t_test_comparison$conf.int[2], 2)
    
    difference <- mean_comparison - mean_reference
    
    ci_lower <- difference - 1.96 * sqrt(se_reference^2 + se_comparison^2)
    ci_upper <- difference + 1.96 * sqrt(se_reference^2 + se_comparison^2)
    
    t_test_result <- t.test(reference_data$age_at_onset, comparison_data$age_at_onset)
    
    event_results[[as.character(comp_group)]] <- list(
      mean_reference = round(mean_reference, 2),
      mean_comparison = round(mean_comparison, 2),
      reference_ci_lower = reference_ci_lower,
      reference_ci_upper = reference_ci_upper,
      comparison_ci_lower = comparison_ci_lower,
      comparison_ci_upper = comparison_ci_upper,
      difference = round(difference, 2),
      ci_lower = round(ci_lower, 2),
      ci_upper = round(ci_upper, 2),
      p_value = round(t_test_result$p.value, 4)
    )
  }
  
  results[[event_var]] <- event_results
}

for (event_var in names(event_time_map)) {
  cat("\nEvent: ", event_var, "\n")
  for (comp_group in comparison_groups) {
    cat("\nComparison: Group", comp_group, "vs Group", reference_group, "\n")
    cat("Group", reference_group, "mean age at onset: ", 
        results[[event_var]][[as.character(comp_group)]]$mean_reference, 
        " [", results[[event_var]][[as.character(comp_group)]]$reference_ci_lower, 
        ", ", results[[event_var]][[as.character(comp_group)]]$reference_ci_upper, "]\n")
    cat("Group", comp_group, "mean age at onset: ", 
        results[[event_var]][[as.character(comp_group)]]$mean_comparison, 
        " [", results[[event_var]][[as.character(comp_group)]]$comparison_ci_lower, 
        ", ", results[[event_var]][[as.character(comp_group)]]$comparison_ci_upper, "]\n")
    cat("Difference in age at onset (Group", comp_group, "- Group", reference_group, "): ", 
        results[[event_var]][[as.character(comp_group)]]$difference, 
        " [", results[[event_var]][[as.character(comp_group)]]$ci_lower, 
        ", ", results[[event_var]][[as.character(comp_group)]]$ci_upper, "]\n")
    cat("P value: ", results[[event_var]][[as.character(comp_group)]]$p_value, "\n")
  }
}
####################################################north_coordinate
data <- data %>%
  mutate(
    birth_group_1 = factor(birth_group_1, levels = c(1, 2))
  )

endpoints <- list(
  IPF = c(time = "incident_IPF_time", event = "incident_IPF"),
  COPD = c(time = "incident_COPD_time", event = "incident_COPD"),
  asthma = c(time = "incident_asthma_time", event = "incident_asthma")
)

data <- data %>%
  mutate(north_decile = ntile(north_coordinate, 9)) %>%
  mutate(north_decile = factor(north_decile, levels = 1:9,
                              labels = paste0("north coordinate – decile ", 1:9)))

# north coordinate – decile 1 到 9
deciles <- levels(data$north_decile)
outcomes <- names(endpoints)

results_matrix <- matrix(NA, nrow = length(deciles), ncol = length(outcomes),
                         dimnames = list(deciles, outcomes))

for (decile in deciles) {
  subset_data <- filter(data, north_decile == decile)
  
  if(nrow(subset_data) < 10){
    warning(paste(decile, "sample less than 10"))
    next
  }
  
  for (endpoint in outcomes) {
    time_var <- endpoints[[endpoint]]["time"]
    event_var <- endpoints[[endpoint]]["event"]
    
    if(!(time_var %in% names(subset_data)) | !(event_var %in% names(subset_data))){
      warning(paste("outcome", endpoint, "no data。"))
      next
    }
    
    formula <- as.formula(paste("Surv(", time_var, ",", event_var, ") ~ birth_group_1 + age + sex + ethnic + education +
               household + TDI + smoke + BMI + alcohol + diabetes + Hypertension + parent_lung_dis"))
    fit <- tryCatch(
      coxph(formula, data = subset_data),
      error = function(e) { 
        warning(paste("fail", e$message, "in", decile, "oucome", endpoint))
        return(NULL)
      }
    )
    
    if(is.null(fit)){
      next
    }
    
    summary_fit <- summary(fit)
    
    coef_names <- rownames(summary_fit$coefficients)
    birth_coef <- coef_names[grepl("^birth_group_1", coef_names)][1]
    
    if(is.na(birth_coef)){
      warning(paste(decile, "outcome", endpoint, "don't find birth_group_1 coef。"))
      next
    }
    
    hr <- round(summary_fit$coefficients[birth_coef, "exp(coef)"], 2)
    lower_ci <- round(summary_fit$conf.int[birth_coef, "lower .95"], 2)
    upper_ci <- round(summary_fit$conf.int[birth_coef, "upper .95"], 2)
    
    hr_ci_str <- paste0(hr, " (", lower_ci, " - ", upper_ci, ")")
    
    results_matrix[decile, endpoint] <- hr_ci_str
  }
}

final_table <- as.data.frame(results_matrix, stringsAsFactors = FALSE)
print(final_table)

outcomes <- c(
  "FEV1_predicted_percentage", 
  "FVC_pred_percentage", 
  "FEV1_FVC_ratio", 
  "PEF"
)

results_table <- data.frame(
  Outcome = character(),
  Model = character(),
  Mean_Group1 = numeric(),
  SD_Group1 = numeric(),
  Mean_Group2 = numeric(),
  SD_Group2 = numeric(),
  Estimate = numeric(),
  CI_Lower = numeric(),
  CI_Upper = numeric(),
  P_Value = numeric(),
  stringsAsFactors = FALSE
)

for (outcome in outcomes) {
  
  desc_group1 <- data %>%
    filter(birth_group_1 == 1) %>%
    dplyr::summarize(
      Mean = mean(.data[[outcome]], na.rm = TRUE),
      SD = sd(.data[[outcome]], na.rm = TRUE)
    )
  

  desc_group2 <- data %>%
    filter(birth_group_1 == 2) %>%
    dplyr::summarize(
      Mean = mean(.data[[outcome]], na.rm = TRUE),
      SD = sd(.data[[outcome]], na.rm = TRUE)
    )
  

  for (model_name in names(model_forms)) {
    

    formula <- as.formula(paste(outcome, "~", model_forms[[model_name]]))
  
    lm_model <- lm(formula, data = data)
    

    tidy_model <- tidy(lm_model, conf.int = TRUE, conf.level = 0.95)
    

    coef_name <- tidy_model %>% 
      filter(str_detect(term, "^birth_group_1")) %>% 
      pull(term)
    

    if (length(coef_name) == 0) {
      warning(paste("fail", outcome, model_name, "'birth_group_1' "))
      next
    }
    
    
    coef_row <- tidy_model %>% filter(term == coef_name)
    
    
    results_table <- results_table %>%
      add_row(
        Outcome = outcome,
        Model = model_name,
        Mean_Group1 = desc_group1$Mean,
        SD_Group1 = desc_group1$SD,
        Mean_Group2 = desc_group2$Mean,
        SD_Group2 = desc_group2$SD,
        Estimate = coef_row$estimate,
        CI_Lower = coef_row$conf.low,
        CI_Upper = coef_row$conf.high,
        P_Value = coef_row$p.value
      )
  }
}

results_table_formatted <- results_table %>%
  mutate(
    Mean_Group1 = round(Mean_Group1, 2),
    SD_Group1 = round(SD_Group1, 2),
    Mean_Group2 = round(Mean_Group2, 2),
    SD_Group2 = round(SD_Group2, 2),
    Estimate = round(Estimate, 3),
    CI_Lower = round(CI_Lower, 3),
    CI_Upper = round(CI_Upper, 3),
    P_Value = signif(P_Value, 3)
  ) %>%
  # 
  mutate(
    Group1 = paste0(Mean_Group1, " ± ", SD_Group1),
    Group2 = paste0(Mean_Group2, " ± ", SD_Group2)
  ) %>%
  # 
  mutate(
    `Coefficient (95% CI)` = paste0(Estimate, " (", CI_Lower, ", ", CI_Upper, ")")
  ) %>%
   
  select(
    Outcome,
    Model,
    Group1,
    Group2,
    `Coefficient (95% CI)`,
    P_Value
  ) %>%

  rename(
    `Mean (Group 1)` = Group1,
    `Mean (Group 2)` = Group2,
    `P-Value` = P_Value
  )
print(results_table_formatted)
#  PRS Calculation in R
library(data.table)    # For fast data import
library(dplyr)         # For data manipulation
library(ggplot2)       # For plotting
library(stringr)       # For string manipulation

gwas_file <- "GWASZJZ2025_summary_stats.txt"
gwas <- fread(gwas_file)
# Quality control: Keep SNPs with beta and p-values
gwas <- gwas %>% filter(!is.na(beta), !is.na(pval))
genotype_file <- "imputedZJZ_genotypes.raw"
genos <- fread(genotype_file)
geno_snps <- names(genos)[-(1:6)]
snp_info <- fread("snp_info_type2_2025_03.txt") 
snp_info <- snp_info %>% filter(MAF >= 0.01, INFO >= 0.3)
snps_to_use <- intersect(gwas$SNP, snp_info$SNP)
snps_to_use <- intersect(snps_to_use, geno_snps)
gwas <- gwas %>% filter(SNP %in% snps_to_use)
genos <- genos[, c("FID", "IID", snps_to_use), with = FALSE]
ld_clumped_snps <- fread("clumped_snps12498.txt")  # One SNP per row, header: SNP
snps_final <- intersect(snps_to_use, ld_clumped_snps$SNP)
gwas <- gwas %>% filter(SNP %in% snps_final)
genos <- genos[, c("FID", "IID", snps_final), with = FALSE]

weights <- gwas %>% select(SNP, beta)
weights <- as.data.frame(weights)
rownames(weights) <- weights$SNP

prs <- genos %>% select(FID, IID)
prs$PRS <- 0

for (snp in snps_final) {
  beta <- weights[snp, "beta"]
  prs$PRS <- prs$PRS + genos[[snp]] * beta
}

# Assume phenotype file: "phenotypes.txt", columns: IID, sex, age, outcome, etc.
pheno <- fread("phenotypes.txt")
prs <- merge(prs, pheno, by = "IID")

prs$PRS_z <- scale(prs$PRS)
prs$PRS_group <- case_when(
  prs$PRS_quintile == "Low" ~ "Low",
  prs$PRS_quintile == "High" ~ "High",
  TRUE ~ "Medium"
)


write.table(prs, "PRS_results.txt", row.names = FALSE, quote = FALSE, sep = "\t")


ggplot(prs, aes(x = PRS_z, fill = PRS_group)) +
  geom_histogram(bins = 50, alpha = 0.6, position = "identity") +
  labs(x = "Standardized PRS", y = "Count") +
  theme_classic() +
  scale_fill_manual(values = c("#8ecae6", "#ffd166", "#ef476f"))

logit_model <- glm(outcome ~ PRS_z + sex + age + PC1 + PC2 + PC3 + PC4, 
                   data = prs, family = "binomial")
summary(logit_model)


prs$PRS_group <- factor(prs$PRS_group, levels = c("Low", "Medium", "High"))
table(prs$PRS_group)
glm_group <- glm(outcome ~ PRS_group + sex + age + PC1 + PC2 + PC3 + PC4, 
                 data = prs, family = "binomial")
summary(glm_group)
# Asthma
asthma_snps <- fread("asthma_snps.txt")$SNP
gwas_asthma <- gwas %>% filter(SNP %in% asthma_snps)
weights_asthma <- gwas_asthma %>% select(SNP, beta)
prs$PRS_asthma <- 0
for (snp in asthma_snps) {
  if (snp %in% colnames(genos)) {
    beta <- weights_asthma[snp, "beta"]
    prs$PRS_asthma <- prs$PRS_asthma + genos[[snp]] * beta
  }
}

###############participants born outside UK
####Date of birth
data$year_birth=data$p34
data$month_birth=data$p52.x
data$birth_group <- NA  

data$birth_group <- ifelse(
  (data$year_birth == 1951 & data$month_birth %in% c("October", "November", "December")) | 
    (data$year_birth == 1952 & data$month_birth %in% c("January", "February", "March")),
  1,
  data$birth_group
)

data$birth_group <- ifelse(
  (data$year_birth == 1952 & data$month_birth %in% c("April", "May", "June", "July", "August", "September")),
  2,
  data$birth_group
)

data$birth_group <- ifelse(
  (data$year_birth == 1952 & data$month_birth %in% c("October", "November", "December")),
  3,
  data$birth_group
)

data$birth_group <- ifelse(
  (data$year_birth == 1953 & data$month_birth %in% c("January", "February", "March")),
  3,
  data$birth_group
)

data$birth_group <- ifelse(
  (data$year_birth == 1953 & data$month_birth %in% c("April", "May", "June", "July", "August", "September")),
  4,
  data$birth_group
)

data$birth_group <- ifelse(
  (data$year_birth == 1953 & data$month_birth %in% c("October", "November", "December")),
  5,
  data$birth_group
)

data$birth_group <- ifelse(
  (data$year_birth == 1954 & data$month_birth %in% c("January", "February", "March", "April", "May", "June")),
  5,
  data$birth_group
)

data$birth_group <- ifelse(
  (data$year_birth == 1954 & data$month_birth %in% c("July", "August", "September", "October", "November", "December")),
  6,
  data$birth_group
)

data$birth_group <- ifelse(
  (data$year_birth == 1955 & data$month_birth %in% c("January", "February", "March", "April", "May", "June")),
  7,
  data$birth_group
)

data$birth_group <- ifelse(
  (data$year_birth == 1955 & data$month_birth %in% c("July", "August", "September", "October", "November", "December")),
  8,
  data$birth_group
)

data$birth_group <- ifelse(
  (data$year_birth == 1956 & data$month_birth %in% c("January", "February", "March")),
  9,
  data$birth_group
)

result <- data %>%
  group_by(year_birth, month_birth) %>%
  summarise(N = n()) %>%
  arrange(year_birth, match(month_birth, c("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"))) %>%
  ungroup() %>%
  mutate(total_count = nrow(data)) %>%
  mutate(percent = N / total_count * 100) %>%
  mutate(cumulative_rate = cumsum(N) / total_count * 100)

print(result)
table(data$birth_group)
sum(!is.na(data$birth_group))


#Country of birth (UK/elsewhere) | Instance 0
table(data$p1647_i0)
data <- data[data$p1647_i0 %in% c("England", "Northern Ireland", "Republic of Ireland", "Scotland", "Wales")==FALSE, ]
names(data) <- make.names(names(data), unique = TRUE)
data <- data %>% filter(!is.na(birth_group))

library(tableone)

vars <- c(
  "birth_group_1", "age", "sex",  "month_birth_1", "ethnic",
  "education", "household", "TDI", "smoke", "alcohol", "BMI",
  "MET_week", "CVD", "Hypertension", "High_cholesterol", "diabetes",
  "Digestive", "Kidney", "Liver", "parent_dementia", "parent_alive",
  "Maternal_smoking", "Breastfed", "birth_weight"
  
)
factorVars <- c(
  "birth_group_1", "sex",  "month_birth_1", "ethnic",
  "education", "smoke", "alcohol", "CVD", "Hypertension",
  "High_cholesterol", "diabetes", "Digestive", "Kidney",
  "Liver", "parent_dementia", "parent_alive",
  "Maternal_smoking", "Breastfed"
)

strata_var <- "birth_group_1"  
table1 <- CreateTableOne(
  vars = vars,
  strata = strata_var,
  data = data,
  factorVars = factorVars,
  addOverall = TRUE,  
  smd = FALSE          
)

table_final <- print(
  table1, 
  showAllLevels = TRUE,  
  exact = "ethnic",       
  pDigits = 3,             
  catDigits = 1,            
  contDigits = 1,           
  smd = FALSE               
)


print(table_final)
cubic_data <- data[, c("birth_group_1", ,'birth_group','incident_IPF_time','incident_IPF',
                       'incident_COPD_time','incident_COPD', 'incident_asthma_time','incident_asthma',age, 
sex, race, birth_location, birth_month, income, townsend_index,
real_food_price, parental_lung_disease, parents_alive, maternal_smoking, breastfed,
fat_intake_birth_period, smoking_status, alcohol_intake, physical_activity, cvd, hypertension,
diabetes, digestive_disease, kidney_disease, liver_disease, survey_year
                      )]
cubic_data_var=(age, sex, race, birth_location, birth_month, income, townsend_index,
real_food_price, parental_lung_disease, parents_alive, maternal_smoking, breastfed,
fat_intake_birth_period, smoking_status, alcohol_intake, physical_activity, cvd, hypertension,
diabetes, digestive_disease, kidney_disease, liver_disease, survey_year)

cubic_data$birth_group=as.numeric(cubic_data$birth_group)
dd <- datadist(cubic_data)
options(datadist='dd') 
fit<- cph(Surv(incident_asthma_time, incident_asthma) ~ rcs(birth_group,6)+ cubic_data_var  ,data=cubic_data)
dd$limits$birth_group[2] <- 6
fit=update(fit)
Pre0 <-rms::Predict(fit,birth_group,fun=exp,
                    type="predictions",ref.zero=TRUE,conf.int = 0.95,digits=2);
pic_ <- ggplot(Pre0) + 
  xlim(1, 9) + 
  ylim(0, 4) + 
  scale_x_continuous(breaks = seq(1, 9, 1)) + 
  scale_y_continuous(breaks = seq(0.5, 1.6, 0.1), expand = c(0, 0))   
pic_

cubic_data <- data[, c("birth_group_1", ,'birth_group','incident_IPF_time','incident_IPF',
                       'incident_COPD_time','incident_COPD', 'incident_asthma_time','incident_asthma',age, 
sex, race, birth_location, birth_month, income, townsend_index,
real_food_price, parental_lung_disease, parents_alive, maternal_smoking, breastfed,
fat_intake_birth_period, smoking_status, alcohol_intake, physical_activity, cvd, hypertension,
diabetes, digestive_disease, kidney_disease, liver_disease, survey_year
                      )]
cubic_data_var=(age, sex, race, birth_location, birth_month, income, townsend_index,
real_food_price, parental_lung_disease, parents_alive, maternal_smoking, breastfed,
fat_intake_birth_period, smoking_status, alcohol_intake, physical_activity, cvd, hypertension,
diabetes, digestive_disease, kidney_disease, liver_disease, survey_year)

cubic_data$birth_group=as.numeric(cubic_data$birth_group)
dd <- datadist(cubic_data)
options(datadist='dd') 
fit<- cph(Surv(incident_COPD_time, incident_COPD) ~ rcs(birth_group,6)+ cubic_data_var  ,data=cubic_data)
dd$limits$birth_group[2] <- 6
fit=update(fit)
Pre0 <-rms::Predict(fit,birth_group,fun=exp,
                    type="predictions",ref.zero=TRUE,conf.int = 0.95,digits=2);
pic_ <- ggplot(Pre0) + 
  xlim(1, 9) + 
  ylim(0, 4) + 
  scale_x_continuous(breaks = seq(1, 9, 1)) + 
  scale_y_continuous(breaks = seq(0.5, 1.6, 0.1), expand = c(0, 0))   
pic_

cubic_data <- data[, c("birth_group_1", ,'birth_group','incident_IPF_time','incident_IPF',
                       'incident_COPD_time','incident_COPD', 'incident_asthma_time','incident_asthma',age, 
sex, race, birth_location, birth_month, income, townsend_index,
real_food_price, parental_lung_disease, parents_alive, maternal_smoking, breastfed,
fat_intake_birth_period, smoking_status, alcohol_intake, physical_activity, cvd, hypertension,
diabetes, digestive_disease, kidney_disease, liver_disease, survey_year
                      )]
cubic_data_var=(age, sex, race, birth_location, birth_month, income, townsend_index,
real_food_price, parental_lung_disease, parents_alive, maternal_smoking, breastfed,
fat_intake_birth_period, smoking_status, alcohol_intake, physical_activity, cvd, hypertension,
diabetes, digestive_disease, kidney_disease, liver_disease, survey_year)

cubic_data$birth_group=as.numeric(cubic_data$birth_group)
dd <- datadist(cubic_data)
options(datadist='dd') 
fit<- cph(Surv(incident_IPF_time, incident_IPF) ~ rcs(birth_group,6)+ cubic_data_var  ,data=cubic_data)
dd$limits$birth_group[2] <- 6
fit=update(fit)
Pre0 <-rms::Predict(fit,birth_group,fun=exp,
                    type="predictions",ref.zero=TRUE,conf.int = 0.95,digits=2);
pic_ <- ggplot(Pre0) + 
  xlim(1, 9) + 
  ylim(0, 4) + 
  scale_x_continuous(breaks = seq(1, 9, 1)) + 
  scale_y_continuous(breaks = seq(0.5, 1.6, 0.1), expand = c(0, 0))   
pic_
